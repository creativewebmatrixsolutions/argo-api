{
  "openapi": "3.0.0",
  "info": {
    "title": "Node-Typescript API",
    "version": "1.0.0",
    "description": "A sample API"
  },
  "servers": [
    {
      "url": "http://localhost:8080"
    }
  ],
  "paths": {
    "/auth/github/": {
      "get": {
        "description": "sign up user to application with github",
        "tags": [
          "auth"
        ],
        "requestBody": {
          "description": "sign up body"
        },
        "responses": {
          "301": {
            "description": "user successfuly signed in",
            "content": {
              "appication/json": {
                "example": {
                  "status": 301
                }
              }
            }
          }
        }
      }
    },
    "/auth/gitlab/": {
      "get": {
        "description": "sign up user to application with gitlab",
        "tags": [
          "auth"
        ],
        "requestBody": {
          "description": "sign up body"
        },
        "responses": {
          "301": {
            "description": "user successfuly signed in",
            "content": {
              "appication/json": {
                "example": {
                  "status": 301
                }
              }
            }
          }
        }
      }
    },
    "/v1/invite": {
      "post": {
        "description": "send invite",
        "tags": [
          "Invite"
        ],
        "security": [
          {
            "cookieAuth": []
          }
        ],
        "requestBody": {
          "description": "send invitation body",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UserInviteSchema"
              },
              "example": {
                "email": "email",
                "status": "pending|Approve|Rejected"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "return created user",
            "content": {
              "application/json": {
                "schema": {
                  "oneOf": [
                    {
                      "$ref": "#/components/schemas/UserInviteSchema"
                    }
                  ]
                }
              }
            }
          },
          "default": {
            "description": "unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    },
    "/v1/invite/update": {
      "post": {
        "description": "update invite",
        "tags": [
          "Invite"
        ],
        "security": [
          {
            "cookieAuth": []
          }
        ],
        "requestBody": {
          "description": "update invitation body",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UserInviteSchema"
              },
              "example": {
                "email": "email",
                "status": "pending|Approve|Rejected"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "return created user",
            "content": {
              "application/json": {
                "schema": {
                  "oneOf": [
                    {
                      "$ref": "#/components/schemas/UserInviteSchema"
                    }
                  ]
                }
              }
            }
          },
          "default": {
            "description": "unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    },
    "/v1/logs": {
      "post": {
        "description": "add logs",
        "tags": [
          "Logs"
        ],
        "security": [
          {
            "cookieAuth": []
          }
        ],
        "requestBody": {
          "description": "logs request body",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Deployment"
              },
              "example": "url :\"\""
            }
          }
        },
        "responses": {
          "201": {
            "description": "return logs",
            "content": {
              "application/json": {
                "schema": {
                  "oneOf": [
                    {
                      "$ref": "#/components/schemas/Deployment"
                    }
                  ]
                }
              }
            }
          },
          "default": {
            "description": "unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    },
    "/v1/logs/{id}": {
      "get": {
        "description": "Get Logs by Id",
        "tags": [
          "Logs"
        ],
        "security": [
          {
            "cookieAuth": []
          }
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "description": "the unique LogId",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "return logs by id",
            "content": {
              "application/json": {
                "schema": {
                  "oneOf": [
                    {
                      "$ref": "#/components/schemas/Deployment"
                    }
                  ]
                }
              }
            }
          }
        }
      }
    },
    "/v1/organization": {
      "get": {
        "description": "Get all organization",
        "tags": [
          "Organization"
        ],
        "security": [
          {
            "cookieAuth": []
          }
        ],
        "responses": {
          "200": {
            "description": "An array of organization",
            "content": {
              "application/json": {
                "schema": {
                  "oneOf": [
                    {
                      "$ref": "#/components/schemas/OrganizationSchema"
                    }
                  ]
                }
              }
            }
          },
          "default": {
            "description": "unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      },
      "post": {
        "description": "Create new organization",
        "tags": [
          "organization"
        ],
        "security": [
          {
            "cookieAuth": []
          }
        ],
        "requestBody": {
          "description": "organization creation request body",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/OrganizationSchema"
              },
              "example": {
                "name": "string,",
                "image": "string,",
                "username": "string,",
                "repositories": "string,",
                "users": "string"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "return created user",
            "content": {
              "application/json": {
                "schema": {
                  "oneOf": [
                    {
                      "$ref": "#/components/schemas/OrganizationSchema"
                    }
                  ]
                }
              }
            }
          },
          "default": {
            "description": "unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      },
      "put": {
        "description": "Update organization",
        "tags": [
          "organization"
        ],
        "security": [
          {
            "cookieAuth": []
          }
        ],
        "requestBody": {
          "description": "organization update request body",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/OrganizationSchema"
              },
              "example": {
                "name": "string,",
                "image": "string,",
                "username": "string,",
                "repositories": "string,",
                "users": "string"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "return updated user",
            "content": {
              "application/json": {
                "schema": {
                  "oneOf": [
                    {
                      "$ref": "#/components/schemas/OrganizationSchema"
                    }
                  ]
                }
              }
            }
          },
          "default": {
            "description": "unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    },
    "/v1/organization/{id}": {
      "get": {
        "description": "Get organization by  organizationId",
        "tags": [
          "Organization"
        ],
        "security": [
          {
            "cookieAuth": []
          }
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "description": "the unique organizationId",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "return organization by id",
            "content": {
              "application/json": {
                "schema": {
                  "oneOf": [
                    {
                      "$ref": "#/components/schemas/OrganizationSchema"
                    }
                  ]
                }
              }
            }
          }
        }
      },
      "delete": {
        "description": "Delete organization by organizationId",
        "tags": [
          "organization"
        ],
        "security": [
          {
            "cookieAuth": []
          }
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "description": "the unique organizationId",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "return deleted organization",
            "content": {
              "application/json": {
                "schema": {
                  "oneOf": [
                    {
                      "$ref": "#/components/schemas/OrganizationSchema"
                    }
                  ]
                }
              }
            }
          }
        }
      }
    },
    "/v1/users": {
      "get": {
        "description": "Get all stored users in Database",
        "tags": [
          "users"
        ],
        "security": [
          {
            "cookieAuth": []
          }
        ],
        "responses": {
          "200": {
            "description": "An array of users",
            "content": {
              "application/json": {
                "schema": {
                  "oneOf": [
                    {
                      "$ref": "#/components/schemas/Users"
                    }
                  ]
                }
              }
            }
          },
          "default": {
            "description": "unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      },
      "post": {
        "description": "Update User",
        "tags": [
          "users"
        ],
        "security": [
          {
            "cookieAuth": []
          }
        ],
        "requestBody": {
          "description": "user creation request body",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UserSchema"
              },
              "example": {
                "name": "userName",
                "email": "test.user@mail.com"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "return updated user",
            "content": {
              "application/json": {
                "schema": {
                  "oneOf": [
                    {
                      "$ref": "#/components/schemas/UserSchema"
                    }
                  ]
                }
              }
            }
          },
          "default": {
            "description": "unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    },
    "/v1/users/{id}": {
      "get": {
        "description": "Get user by userId",
        "tags": [
          "users"
        ],
        "security": [
          {
            "cookieAuth": []
          }
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "description": "the unique userId",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "return user by id",
            "content": {
              "application/json": {
                "schema": {
                  "oneOf": [
                    {
                      "$ref": "#/components/schemas/UserSchema"
                    }
                  ]
                }
              }
            }
          }
        }
      },
      "delete": {
        "description": "Delete user by userId",
        "tags": [
          "users"
        ],
        "security": [
          {
            "cookieAuth": []
          }
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "description": "the unique userId",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "return deleted user",
            "content": {
              "application/json": {
                "schema": {
                  "oneOf": [
                    {
                      "$ref": "#/components/schemas/UserSchema"
                    }
                  ]
                }
              }
            }
          }
        }
      }
    },
    "/v1/repository": {
      "post": {
        "description": "Update repository",
        "tags": [
          "users"
        ],
        "security": [
          {
            "cookieAuth": []
          }
        ],
        "requestBody": {
          "description": "repository update request body",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/RepositorySchema"
              },
              "example": {
                "name": "userName",
                "email": "test.user@mail.com"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "return updated Repository",
            "content": {
              "application/json": {
                "schema": {
                  "oneOf": [
                    {
                      "$ref": "#/components/schemas/RepositorySchema"
                    }
                  ]
                }
              }
            }
          },
          "default": {
            "description": "unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    },
    "/v1/repository/github/repo": {
      "get": {
        "description": "Get repository",
        "tags": [
          "repository"
        ],
        "security": [
          {
            "cookieAuth": []
          }
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "description": "get repositories",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "return repositories",
            "content": {
              "application/json": {
                "schema": {
                  "oneOf": [
                    {
                      "$ref": "#/components/schemas/RepositorySchema"
                    }
                  ]
                }
              }
            }
          }
        }
      }
    },
    "/v1/repository/{id}": {
      "get": {
        "description": "Get repository by repositoryId",
        "tags": [
          "repository"
        ],
        "security": [
          {
            "cookieAuth": []
          }
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "description": "the unique repositoryId",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "return repository by id",
            "content": {
              "application/json": {
                "schema": {
                  "oneOf": [
                    {
                      "$ref": "#/components/schemas/RepositorySchema"
                    }
                  ]
                }
              }
            }
          }
        }
      }
    },
    "/v1/webhook/create": {
      "post": {
        "description": "add webhook",
        "tags": [
          "webhook"
        ],
        "security": [
          {
            "cookieAuth": []
          }
        ],
        "requestBody": {
          "description": "webhook request body",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/DeploymentSchema"
              },
              "example": "url :\"\""
            }
          }
        },
        "responses": {
          "201": {
            "description": "return webhook",
            "content": {
              "application/json": {
                "schema": {
                  "oneOf": [
                    {
                      "$ref": "#/components/schemas/DeploymentSchema"
                    }
                  ]
                }
              }
            }
          },
          "default": {
            "description": "unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    },
    "/v1/webhook/notifyOnPush": {
      "post": {
        "description": "notify on push",
        "tags": [
          "Logs"
        ],
        "security": [
          {
            "cookieAuth": []
          }
        ],
        "requestBody": {
          "description": "notify On Push request body",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/DeploymentSchema"
              },
              "example": "url :\"\""
            }
          }
        },
        "responses": {
          "201": {
            "description": "return logs",
            "content": {
              "application/json": {
                "schema": {
                  "oneOf": [
                    {
                      "$ref": "#/components/schemas/DeploymentSchema"
                    }
                  ]
                }
              }
            }
          },
          "default": {
            "description": "unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "UserSchema": {
        "required": [
          "email",
          "name"
        ],
        "properties": {
          "id": {
            "type": "string"
          },
          "name": {
            "type": "string"
          },
          "email": {
            "type": "string"
          },
          "password": {
            "type": "string"
          },
          "passwordResetToken": {
            "type": "string"
          },
          "passwordResetExpires": {
            "type": "string",
            "format": "date"
          },
          "tokens": {
            "type": "array"
          }
        }
      },
      "Users": {
        "type": "array",
        "items": {
          "$ref": "#/components/schemas/UserSchema"
        }
      },
      "Error": {
        "type": "object",
        "required": [
          "status",
          "message"
        ],
        "properties": {
          "status": {
            "type": "integer",
            "description": "HTTP status code",
            "example": 200
          },
          "message": {
            "type": "string",
            "description": "Error description",
            "example": "User created"
          }
        }
      }
    },
    "securitySchemes": {
      "cookieAuth": {
        "type": "apiKey",
        "in": "cookie",
        "name": "sid"
      }
    }
  },
  "tags": []
}